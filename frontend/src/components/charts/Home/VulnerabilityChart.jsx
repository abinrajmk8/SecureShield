import React from 'react';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';
import { motion } from 'framer-motion';

const processThreatData = (reports) => {
    const now = new Date();
    const months = [];
    
    // Generate the last 8 months dynamically
    for (let i = 7; i >= 0; i--) {
        const date = new Date(now.getFullYear(), now.getMonth() - i, 1);
        months.push({ name: date.toLocaleString('default', { month: 'short' }), threats: 0 });
    }

    // Count threats per month
    reports.forEach(report => {
        const reportDate = new Date(report.timestamp);
        const monthLabel = reportDate.toLocaleString('default', { month: 'short' });
        const monthIndex = months.findIndex(m => m.name === monthLabel);
        if (monthIndex !== -1) {
            months[monthIndex].threats += 1;
        }
    });

    return months;
};

const ThreatsOverTimeChart = ({ reports }) => {
    const threatData = processThreatData(reports);

    return (
        <motion.div 
            className="bg-gray-800 bg-opacity-50 backdrop-blur-md shadow-lg rounded-xl p-6 border border-gray-700"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
        >
            <h2 className="text-lg font-medium mb-4 text-gray-100">Threats Over Time</h2>
            <div className="h-96">
                <ResponsiveContainer width="100%" height="100%">
                    <LineChart data={threatData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>
                        <CartesianGrid strokeDasharray="3 3" stroke="#4B5563" />
                        <XAxis dataKey="name" stroke="#9ca3af" />
                        <YAxis stroke="#9ca3af" allowDecimals={false} />
                        <Tooltip contentStyle={{ backgroundColor: "#1F2937", borderColor: '#4B5563' }} itemStyle={{ color: "#9ca3af" }} />
                        <Line 
                            type="monotone" 
                            dataKey="threats" 
                            stroke="#10B981" 
                            strokeWidth={3} 
                            dot={{ fill: "#10B981", strokeWidth: 2, r: 6 }} 
                            activeDot={{ r: 8, strokeWidth: 2 }}
                            isAnimationActive={true} 
                            animationDuration={500} 
                            animationEasing="ease-in-out"
                        />
                    </LineChart>
                </ResponsiveContainer>
            </div>
        </motion.div>
    );
};

export default ThreatsOverTimeChart;
